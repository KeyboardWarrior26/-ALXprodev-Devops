#!/bin/bash

mkdir -p pokemon_data

pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Timeout in seconds before killing a stuck job
TIMEOUT=10

# Declare an array to hold background PIDs
pids=()

fetch_pokemon() {
    local name=$1
    echo "Fetching data for $name..."
    curl -s "https://pokeapi.co/api/v2/pokemon/$name" -o "pokemon_data/${name}.json"
    if [ $? -eq 0 ]; then
        echo "Saved data to pokemon_data/${name}.json ✅"
    else
        echo "Failed to fetch $name"
    fi
}

# Launch jobs and store their PIDs
for name in "${pokemon_list[@]}"; do
    fetch_pokemon "$name" &
    pids+=($!)
done

# Monitor and manage jobs
for pid in "${pids[@]}"; do
    # Wait for job with timeout
    SECONDS=0
    while kill -0 "$pid" 2>/dev/null; do
        if [ $SECONDS -ge $TIMEOUT ]; then
            echo "Process $pid timed out! Killing..."
            kill "$pid"
            break
        fi
        sleep 1
    done
done

echo "All Pokémon data fetch processes complete."
